(function(a,b){if("function"==typeof define&&define.amd)define(["exports","./commons/ErrorModels","./commons/Iterators"],b);else if("undefined"!=typeof exports)b(exports,require("./commons/ErrorModels"),require("./commons/Iterators"));else{var c={exports:{}};b(c.exports,a.commonsErrorModels,a.commonsIterators),a.range=c.exports}})(this,function(a,b,c){"use strict";function d(a,b){return a===b}function e(a,b,c){return"number"!=typeof a||"number"!=typeof b||"number"!=typeof c&&"function"!=typeof c}Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;a.default=function(a,f,g){if("undefined"==typeof f&&(f=a,a=0),"undefined"==typeof g&&(a<f?g=1:g=-1),d(a,f))throw new b.ArgumentError("The range parameter is same.");else if(e(a,f,g))throw new b.ArgumentError("Please check arguments type.");var h=g;if("number"==typeof g){var i=g;h=function(a){return a+i}}return new c.RangeIterator(a,f,h)}});